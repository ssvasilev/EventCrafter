from datetime import datetime
from src.database.db_operations import get_event
from src.logger import logger
from telegram.error import BadRequest

async def send_event_creation_notification(context, event_id, bot_message_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –æ –Ω–æ–≤–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î"""
    try:
        if not event_id or not bot_message_id:
            logger.error("–ù–µ —É–∫–∞–∑–∞–Ω—ã event_id –∏–ª–∏ bot_message_id –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏
        try:
            event = get_event(context.bot_data["db_path"], event_id)
            if not event:
                logger.error(f"–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ {event_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î")
                return
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è {event_id}: {e}")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        chat_info = await _get_chat_info(context, event.get("chat_id"))

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = await _format_notification_message(event, chat_info, bot_message_id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await context.bot.send_message(
            chat_id=event["creator_id"],
            text=message_text,
            parse_mode="HTML",
            disable_web_page_preview=True
        )

    except BadRequest as e:
        # –¢–µ–ø–µ—Ä—å event –≤—Å–µ–≥–¥–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω (—Ö–æ—Ç—è –º–æ–∂–µ—Ç –±—ã—Ç—å None)
        event = get_event(context.bot_data["db_path"], event_id)
        creator_id = event.get("creator_id") if event else "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è creator_id {creator_id}: {e}")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ {event_id}: {e}", exc_info=True)

async def _get_chat_info(context, chat_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ"""
    if not chat_id:
        return {"name": "—á–∞—Ç", "link": ""}

    try:
        chat = await context.bot.get_chat(chat_id)
        chat_name = chat.title or "—á–∞—Ç"
        if str(chat_id).startswith('-100'):
            # –î–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø
            base_chat_id = str(chat_id)[4:]
            chat_link = f"https://t.me/c/{base_chat_id}"
        elif str(chat_id).startswith('-'):
            # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –≥—Ä—É–ø–ø
            base_chat_id = str(abs(chat_id))
            chat_link = f"https://t.me/c/{base_chat_id}"
        else:
            # –î–ª—è –∫–∞–Ω–∞–ª–æ–≤
            chat_link = f"https://t.me/c/{chat_id}"
        return {"name": chat_name, "link": chat_link}
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ {chat_id}: {e}")
        return {"name": "—á–∞—Ç", "link": ""}

async def _format_notification_message(event, chat_info, bot_message_id):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    message_parts = [
        "‚úÖ <b>–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ!</b>",
        "",
        f"üì¢ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {event.get('description', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}"
    ]

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É
    if event.get("date"):
        try:
            date_str = datetime.strptime(event["date"], "%d.%m.%Y").strftime("%d.%m.%Y (%A)")
            message_parts.append(f"üìÖ <b>–î–∞—Ç–∞:</b> {date_str}")
        except ValueError:
            message_parts.append(f"üìÖ <b>–î–∞—Ç–∞:</b> {event['date']}")

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è
    if event.get("time"):
        message_parts.append(f"üïí <b>–í—Ä–µ–º—è:</b> {event['time']}")

    # –î–æ–±–∞–≤–ª—è–µ–º –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    if "participant_limit" in event:
        limit = "‚àû" if event["participant_limit"] is None else event["participant_limit"]
        message_parts.append(f"üë• <b>–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> {limit}")

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    if chat_info["link"]:
        message_parts.append(f"üí¨ <b>–ß–∞—Ç:</b> <a href='{chat_info['link']}'>{chat_info['name']}</a>")
    else:
        message_parts.append(f"üí¨ <b>–ß–∞—Ç:</b> {chat_info['name']}")

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
    if event.get("chat_id") and bot_message_id:
        chat_id = event["chat_id"]
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —á–∞—Ç–∞
        if str(chat_id).startswith('-100'):
            # –î–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø (—É–¥–∞–ª—è–µ–º -100 –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å—Ç–∞–≤—à—É—é—Å—è —á–∞—Å—Ç—å)
            base_chat_id = str(chat_id)[4:]
            event_link = f"https://t.me/c/{base_chat_id}/{bot_message_id}"
        elif str(chat_id).startswith('-'):
            # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –≥—Ä—É–ø–ø (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ -100)
            base_chat_id = str(abs(chat_id))
            event_link = f"https://t.me/c/{base_chat_id}/{bot_message_id}"
        else:
            # –î–ª—è –∫–∞–Ω–∞–ª–æ–≤ (chat_id –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π)
            event_link = f"https://t.me/c/{chat_id}/{bot_message_id}"

        message_parts.append(f"\nüîó <a href='{event_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é</a>")

    return "\n".join(message_parts)