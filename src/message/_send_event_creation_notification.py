from datetime import datetime

from src.logger import logger


async def _send_event_creation_notification(context, draft, bot_message_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –æ –Ω–æ–≤–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        if not draft or not bot_message_id:
            logger.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        chat_name = "—á–∞—Ç"
        chat_link = ""
        try:
            chat = await context.bot.get_chat(draft["chat_id"])
            chat_name = chat.title or "—á–∞—Ç"
            if str(draft["chat_id"]).startswith('-'):
                chat_link = f"https://t.me/c/{str(abs(draft['chat_id']))}"
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ: {e}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
        chat_id_link = str(abs(draft["chat_id"])) if draft.get("chat_id") else ""
        event_link = f"https://t.me/c/{chat_id_link}/{bot_message_id}" if chat_id_link else ""

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        date_str = ""
        if draft.get("date"):
            try:
                event_date = datetime.strptime(draft["date"], "%d.%m.%Y")
                date_str = event_date.strftime("%d.%m.%Y (%A)")
            except (ValueError, TypeError) as e:
                logger.warning(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã: {e}")
                date_str = draft["date"]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message_parts = [
            "‚úÖ <b>–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ!</b>",
            "",
            f"üì¢ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {draft.get('description', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}"
        ]

        if date_str:
            message_parts.append(f"üìÖ <b>–î–∞—Ç–∞:</b> {date_str}")
        if draft.get("time"):
            message_parts.append(f"üïí <b>–í—Ä–µ–º—è:</b> {draft['time']}")

        if chat_link:
            message_parts.append(f"üí¨ <b>–ß–∞—Ç:</b> <a href='{chat_link}'>{chat_name}</a>")
        else:
            message_parts.append(f"üí¨ <b>–ß–∞—Ç:</b> {chat_name}")

        if event_link:
            message_parts.append(f"\nüîó <a href='{event_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é</a>")

        message_text = "\n".join(message_parts)

        await context.bot.send_message(
            chat_id=draft["creator_id"],
            text=message_text,
            parse_mode="HTML",
            disable_web_page_preview=True
        )

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—Ç–µ–ª—è: {e}", exc_info=True)