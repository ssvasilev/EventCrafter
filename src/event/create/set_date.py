from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from telegram.error import BadRequest
from src.handlers.conversation_handler_states import SET_TIME, SET_DATE
from src.database.db_draft_operations import update_draft, get_draft
from src.logger.logger import logger

async def set_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ context.user_data
    if "draft_id" not in context.user_data or "description" not in context.user_data:
        logger.error("Missing required data in user_data")
        await update.message.reply_text("‚ö†Ô∏è –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —É—Ç–µ—Ä—è–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return ConversationHandler.END

    date_text = update.message.text.strip()
    try:
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã
        datetime.strptime(date_text, "%d.%m.%Y").date()

        # –û–±–Ω–æ–≤–ª—è–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫
        update_draft(
            db_path=context.bot_data["drafts_db_path"],
            draft_id=context.user_data["draft_id"],
            status="AWAIT_TIME",
            date=date_text
        )

        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
        draft = get_draft(context.bot_data["drafts_db_path"], context.user_data["draft_id"])
        if not draft:
            logger.error(f"Draft {context.user_data['draft_id']} not found")
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞: —á–µ—Ä–Ω–æ–≤–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return ConversationHandler.END

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = [[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message_text = f"üì¢ {draft['description']}\n\nüìÖ –î–∞—Ç–∞: {date_text}\n\n–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú"

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤—É—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:
        # 1. –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ (–Ω–µ—Ç bot_message_id)
        # 2. –û–±—ã—á–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π (–µ—Å—Ç—å bot_message_id)
        if "bot_message_id" not in context.user_data:
            # –°—Ü–µ–Ω–∞—Ä–∏–π –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            sent_message = await update.message.reply_text(
                text=message_text,
                reply_markup=reply_markup
            )
            context.user_data["bot_message_id"] = sent_message.message_id
        else:
            # –û–±—ã—á–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                await context.bot.edit_message_text(
                    chat_id=update.message.chat_id,
                    message_id=context.user_data["bot_message_id"],
                    text=message_text,
                    reply_markup=reply_markup
                )
            except BadRequest as e:
                logger.warning(f"Failed to edit message: {e}")
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                sent_message = await update.message.reply_text(
                    text=message_text,
                    reply_markup=reply_markup
                )
                context.user_data["bot_message_id"] = sent_message.message_id

        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await update.message.delete()
        except BadRequest as e:
            logger.warning(f"Failed to delete user message: {e}")

        return SET_TIME

    except ValueError:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã
        error_message = "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 31.12.2025):"

        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
        if "bot_message_id" in context.user_data:
            try:
                await context.bot.edit_message_text(
                    chat_id=update.message.chat_id,
                    message_id=context.user_data["bot_message_id"],
                    text=error_message,
                    reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]])
                )
            except BadRequest as e:
                logger.warning(f"Failed to edit error message: {e}")
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                sent_message = await update.message.reply_text(
                    text=error_message,
                    reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]])
                )
                context.user_data["bot_message_id"] = sent_message.message_id
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            sent_message = await update.message.reply_text(
                text=error_message,
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]])
            )
            context.user_data["bot_message_id"] = sent_message.message_id

        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–µ–≤–µ—Ä–Ω–æ–π –¥–∞—Ç–æ–π
        try:
            await update.message.delete()
        except BadRequest as e:
            logger.warning(f"Failed to delete invalid date message: {e}")

        return SET_DATE

    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
        logger.error(f"Unexpected error in set_date: {e}")
        try:
            await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∑–∞–Ω–æ–≤–æ.")
        except Exception as e:
            logger.error(f"Failed to send error message: {e}")

        # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
        context.user_data.clear()
        return ConversationHandler.END