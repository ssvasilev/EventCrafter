from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from telegram.error import BadRequest
from src.handlers.conversation_handler_states import SET_LIMIT, SET_TIME
from src.database.db_draft_operations import update_draft, get_draft, set_user_state

async def set_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get("restored"):
        if 'draft_id' not in context.user_data:
            await update.message.reply_text("–°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
            return ConversationHandler.END

        time_text = update.message.text
        try:
            time = datetime.strptime(time_text, "%H:%M").time()

            # –û–±–Ω–æ–≤–ª—è–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫
            update_draft(
                db_path=context.bot_data["drafts_db_path"],
                draft_id=context.user_data["draft_id"],
                status="AWAIT_PARTICIPANT_LIMIT",
                time=time.strftime("%H:%M")
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            set_user_state(
                context.bot_data["drafts_db_path"],
                update.message.from_user.id,
                "mention_handler" if "description" in context.user_data else "create_event_handler",
                SET_LIMIT,
                context.user_data["draft_id"]
            )

            # –ü–æ–ª—É—á–∞–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫
            draft = get_draft(context.bot_data["drafts_db_path"], context.user_data["draft_id"])

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            keyboard = [[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]]
            reply_markup = InlineKeyboardMarkup(keyboard)

            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await context.bot.edit_message_text(
                chat_id=update.message.chat_id,
                message_id=context.user_data["bot_message_id"],
                text=f"üì¢ {draft['description']}\n\nüìÖ –î–∞—Ç–∞: {draft['date']}\n\nüïí –í—Ä–µ–º—è: {time_text}\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (0 - –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ):",
                reply_markup=reply_markup,
            )

            try:
                await update.message.delete()
            except BadRequest:
                pass

            return SET_LIMIT

        except ValueError:
            await context.bot.edit_message_text(
                chat_id=update.message.chat_id,
                message_id=context.user_data["bot_message_id"],
                text="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú",
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]])
            )
            try:
                await update.message.delete()
            except BadRequest:
                pass

            return SET_TIME