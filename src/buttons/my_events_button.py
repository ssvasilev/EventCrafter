from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler

from src.database.db_operations import get_events_by_participant
from src.logger.logger import logger

#–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–æ–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
async def my_events_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    #await query.answer()

    user_id = query.from_user.id
    db_path = context.bot_data["db_path"]

    # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —É—á–∞—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    events = get_events_by_participant(db_path, user_id)

    if not events:
        await query.edit_message_text("–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏.")
        return

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ —á–∞—Ç–∞–º
    events_by_chat = {}
    for event in events:
        chat_id = event["chat_id"]
        if chat_id not in events_by_chat:
            events_by_chat[chat_id] = []
        events_by_chat[chat_id].append(event)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ —á–∞—Ç–∞–º
    message_text = "üìã –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ:\n\n"
    for chat_id, events_in_chat in events_by_chat.items():
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        try:
            chat = await context.bot.get_chat(chat_id)
            chat_name = chat.title or chat.username or f"–ß–∞—Ç {chat_id}"
            chat_link = chat.invite_link or f"https://t.me/{chat.username}" if chat.username else f"–ß–∞—Ç {chat_id}"
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ {chat_id}: {e}")
            chat_name = f"–ß–∞—Ç {chat_id}"
            chat_link = f"–ß–∞—Ç {chat_id}"

        message_text += f"üí¨ <b>{chat_name}</b> ({chat_link}):\n"
        for event in events_in_chat:
            event_link = f"https://t.me/c/{str(chat_id).replace('-100', '')}/{event['message_id']}"
            message_text += f"  - <a href='{event_link}'>üìÖ {event['description']}</a> ({event['date']} {event['time']})\n"
        message_text += "\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    try:
        await context.bot.send_message(
            chat_id=user_id,
            text=message_text,
            parse_mode="HTML",
            disable_web_page_preview=True
        )
        await query.edit_message_text("–°–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await query.edit_message_text("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —á–∞—Ç —Å –±–æ—Ç–æ–º.")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥
    return ConversationHandler.END