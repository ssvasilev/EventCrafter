from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from telegram.error import BadRequest

from src.database.db_draft_operations import (
    update_draft, get_draft, delete_draft,
    get_user_chat_draft
)
from src.database.db_operations import add_event
from src.message.send_message import send_event_message
from src.logger.logger import logger


async def handle_draft_message(update: Update, context: ContextTypes.DEFAULT_TYPE, draft):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞"""
    user_message = update.message.text
    creator_id = update.message.from_user.id
    chat_id = update.message.chat_id

    try:
        if draft["status"] == "AWAIT_DESCRIPTION":
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            update_draft(
                db_path=context.bot_data["drafts_db_path"],
                draft_id=draft["id"],
                status="AWAIT_DATE",
                description=user_message
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
            keyboard = [[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_draft|{draft['id']}")]]
            await context.bot.edit_message_text(
                chat_id=chat_id,
                message_id=draft["bot_message_id"],
                text=f"üì¢ {user_message}\n\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )

        elif draft["status"] == "AWAIT_DATE":
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
                date = datetime.strptime(user_message, "%d.%m.%Y").date()
                update_draft(
                    db_path=context.bot_data["drafts_db_path"],
                    draft_id=draft["id"],
                    status="AWAIT_TIME",
                    date=user_message
                )

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
                keyboard = [[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_draft|{draft['id']}")]]
                await context.bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=draft["bot_message_id"],
                    text=f"üì¢ {draft['description']}\n\nüìÖ –î–∞—Ç–∞: {user_message}\n\n–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú",
                    reply_markup=InlineKeyboardMarkup(keyboard)
                )

            except ValueError:
                await context.bot.send_message(
                    chat_id=chat_id,
                    text="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì"
                )
                return

        elif draft["status"] == "AWAIT_TIME":
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏
                time = datetime.strptime(user_message, "%H:%M").time()
                update_draft(
                    db_path=context.bot_data["drafts_db_path"],
                    draft_id=draft["id"],
                    status="AWAIT_LIMIT",
                    time=user_message
                )

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
                keyboard = [[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_draft|{draft['id']}")]]
                await context.bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=draft["bot_message_id"],
                    text=f"üì¢ {draft['description']}\n\nüìÖ –î–∞—Ç–∞: {draft['date']}\n\nüïí –í—Ä–µ–º—è: {user_message}\n\n"
                         f"–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (0 - –±–µ–∑ –ª–∏–º–∏—Ç–∞):",
                    reply_markup=InlineKeyboardMarkup(keyboard)
                )

            except ValueError:
                await context.bot.send_message(
                    chat_id=chat_id,
                    text="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú"
                )
                return

        elif draft["status"] == "AWAIT_LIMIT":
            try:
                limit = int(user_message)
                if limit < 0:
                    raise ValueError("–õ–∏–º–∏—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")

                # –°–æ–∑–¥–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
                event_id = add_event(
                    db_path=context.bot_data["db_path"],
                    description=draft["description"],
                    date=draft["date"],
                    time=draft["time"],
                    limit=limit if limit != 0 else None,
                    creator_id=creator_id,
                    chat_id=chat_id
                )

                if not event_id:
                    raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏
                message_id = await send_event_message(event_id, context, chat_id)

                # –£–¥–∞–ª—è–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫
                delete_draft(context.bot_data["drafts_db_path"], draft["id"])

                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å —Ñ–æ—Ä–º–æ–π
                try:
                    await context.bot.delete_message(
                        chat_id=chat_id,
                        message_id=draft["bot_message_id"]
                    )
                except BadRequest:
                    pass

            except ValueError:
                await context.bot.send_message(
                    chat_id=chat_id,
                    text="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ª–∏–º–∏—Ç–∞. –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (0 - –±–µ–∑ –ª–∏–º–∏—Ç–∞)"
                )
                return
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {e}")
                await context.bot.send_message(
                    chat_id=chat_id,
                    text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
                )
                return

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await update.message.delete()
        except BadRequest:
            pass

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞: {e}")
        await context.bot.send_message(
            chat_id=chat_id,
            text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"
        )