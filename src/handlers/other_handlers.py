from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, MessageHandler, filters
from src.database.db_draft_operations import get_active_draft
from src.handlers.conversation_handler_states import (
    SET_DESCRIPTION, SET_DATE, SET_TIME, SET_LIMIT
)
from src.logger.logger import logger

async def text_message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
    """
    if not update.message:
        return None

    try:
        user_id = update.message.from_user.id
        chat_id = update.message.chat_id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
        active_draft = get_active_draft(
            db_path=context.bot_data["drafts_db_path"],
            creator_id=user_id,
            chat_id=chat_id
        )

        # –ï—Å–ª–∏ –µ—Å—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫ - –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if active_draft:
            return await handle_existing_draft(update, context, active_draft)

        # –ï—Å–ª–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –Ω–µ—Ç - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        return None

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ text_message_handler: {e}")
        return None

async def handle_existing_draft(update: Update, context: ContextTypes.DEFAULT_TYPE, draft):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞"""
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –≤ context
        context.user_data.update({
            "draft_id": draft["id"],
            "restored": True,  # –§–ª–∞–≥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            "auto_restored": True  # –§–ª–∞–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        })

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if draft["status"] == "AWAIT_DESCRIPTION":
            await update.message.reply_text(
                "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º...\n\n–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]
                ])
            )
            return SET_DESCRIPTION

        elif draft["status"] == "AWAIT_DATE":
            await update.message.reply_text(
                f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º...\n\nüì¢ {draft['description']}\n\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]
                ])
            )
            return SET_DATE

        elif draft["status"] == "AWAIT_TIME":
            await update.message.reply_text(
                f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º...\n\nüì¢ {draft['description']}\n\nüìÖ –î–∞—Ç–∞: {draft['date']}\n\n–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú:",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]
                ])
            )
            return SET_TIME

        elif draft["status"] == "AWAIT_LIMIT":
            await update.message.reply_text(
                f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º...\n\nüì¢ {draft['description']}\n\nüìÖ –î–∞—Ç–∞: {draft['date']}\n\nüïí –í—Ä–µ–º—è: {draft['time']}\n\n–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (0 - –±–µ–∑ –ª–∏–º–∏—Ç–∞):",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data="cancel_input")]
                ])
            )
            return SET_LIMIT

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.")
        return None

def setup_other_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏"""
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & ~filters.Entity("mention"),
        text_message_handler
    ), group=1)