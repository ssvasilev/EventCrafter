from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, MessageHandler, filters
from telegram.error import BadRequest

from src.database.db_draft_operations import add_draft, get_user_chat_draft, update_draft
from src.handlers.draft_handlers import handle_draft_message
from src.logger.logger import logger

async def mention_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.entities:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º—è–Ω—É—Ç –ª–∏ –±–æ—Ç
    for entity in update.message.entities:
        if entity.type == "mention" and update.message.text[entity.offset:entity.offset + entity.length] == f"@{context.bot.username}":
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
            mention_text = update.message.text[entity.offset + entity.length:].strip()
            creator_id = update.message.from_user.id
            chat_id = update.message.chat_id

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫
            draft = get_user_chat_draft(context.bot_data["drafts_db_path"], creator_id, chat_id)

            if draft:
                return await handle_draft_message(update, context, draft)

            if mention_text:
                # –°–æ–∑–¥–∞–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
                draft_id = add_draft(
                    db_path=context.bot_data["drafts_db_path"],
                    creator_id=creator_id,
                    chat_id=chat_id,
                    status="AWAIT_DATE",
                    description=mention_text
                )

                if not draft_id:
                    await update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.")
                    return

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –¥–∞—Ç—ã
                keyboard = [[InlineKeyboardButton("‚õî –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_draft|{draft_id}")]]
                reply_markup = InlineKeyboardMarkup(keyboard)

                sent_message = await update.message.reply_text(
                    f"üì¢ {mention_text}\n\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì",
                    reply_markup=reply_markup,
                )

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–µ—Ä–Ω–æ–≤–∏–∫
                update_draft(
                    db_path=context.bot_data["drafts_db_path"],
                    draft_id=draft_id,
                    bot_message_id=sent_message.message_id
                )

                # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    await update.message.delete()
                except BadRequest as e:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

            else:
                # –ï—Å–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
                keyboard = [
                    [InlineKeyboardButton("üìÖ –°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", callback_data="create_event")],
                    [InlineKeyboardButton("üìã –ú–æ–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data="my_events")]
                ]
                reply_markup = InlineKeyboardMarkup(keyboard)

                try:
                    await update.message.reply_text(
                        "–í—ã —É–ø–æ–º—è–Ω—É–ª–∏ –º–µ–Ω—è! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?",
                        reply_markup=reply_markup,
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—É—Å—Ç–æ–≥–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è: {e}")

# ConversationHandler –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
conv_handler_create_mention = MessageHandler(
    filters.Entity("mention") & filters.TEXT,
    mention_handler
)