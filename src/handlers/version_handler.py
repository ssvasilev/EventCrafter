from pathlib import Path
from telegram import Update
from telegram.ext import ContextTypes


async def version(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –ò—â–µ–º —Ñ–∞–π–ª VERSION –≤ —Ç–µ–∫—É—â–µ–π —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (/app –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ)
        version_path = Path("/app/VERSION")

        if not version_path.exists():
            await update.message.reply_text(
                f"–§–∞–π–ª VERSION –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {version_path}",
                reply_to_message_id=update.message.message_id
            )
            return

        with open(version_path, 'r') as f:
            version_text = f.read().strip()

        await update.message.reply_text(
            f"üìå –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {version_text}",
            reply_to_message_id=update.message.message_id
        )

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –≤–µ—Ä—Å–∏–∏: {e}")
        await update.message.reply_text(
            f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –≤–µ—Ä—Å–∏–∏: {e}",
            reply_to_message_id=update.message.message_id
        )