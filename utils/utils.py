from datetime import datetime, timedelta, date, time

import locale

from config import tz

from datetime import datetime
from zoneinfo import ZoneInfo  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ZoneInfo –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')  # –î–ª—è Linux


def time_until_event(event_date: str, event_time: str, tz: ZoneInfo) -> str:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –¥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞.
    :param event_date: –î–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–¥-–º–º-–≥–≥–≥–≥".
    :param event_time: –í—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "—á—á:–º–º".
    :param tz: –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (ZoneInfo).
    :return: –°—Ç—Ä–æ–∫–∞ —Å –æ—Å—Ç–∞–≤—à–∏–º—Å—è –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ "X –¥–Ω–µ–π, Y —á–∞—Å–æ–≤, Z –º–∏–Ω—É—Ç".
    """
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ –æ–±—ä–µ–∫—Ç datetime
    event_datetime = datetime.strptime(f"{event_date} {event_time}", "%d-%m-%Y %H:%M")
    event_datetime = event_datetime.replace(tzinfo=tz)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
    now = datetime.now(tz)

    # –ï—Å–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É–∂–µ –ø—Ä–æ—à–ª–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if event_datetime <= now:
        return "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É–∂–µ –ø—Ä–æ—à–ª–æ."

    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –≤—Ä–µ–º–µ–Ω–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    delta = event_datetime - now
    days = delta.days
    hours, remainder = divmod(delta.seconds, 3600)
    minutes, _ = divmod(remainder, 60)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –æ—Å—Ç–∞–≤—à–∏–º—Å—è –≤—Ä–µ–º–µ–Ω–µ–º
    result = []
    if days > 0:
        result.append(f"{days} –¥–Ω–µ–π")
    if hours > 0:
        result.append(f"{hours} —á–∞—Å–æ–≤")
    if minutes > 0:
        result.append(f"{minutes} –º–∏–Ω—É—Ç")

    return ", ".join(result) if result else "–ú–µ–Ω–µ–µ –º–∏–Ω—É—Ç—ã"


def format_date_with_weekday(date_str: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–¥-–º–º-–≥–≥–≥–≥" –≤ —Å—Ç—Ä–æ–∫—É —Å –¥–Ω–µ–º –Ω–µ–¥–µ–ª–∏.
    :param date_str: –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–¥-–º–º-–≥–≥–≥–≥".
    :return: –°—Ç—Ä–æ–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–¥.–º–º.–≥–≥–≥–≥ (–î–µ–Ω—å–ù–µ–¥–µ–ª–∏)".
    """
    date_obj = datetime.strptime(date_str, "%d-%m-%Y")
    return date_obj.strftime("%d.%m.%Y (%A)")  # %A ‚Äî –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏


def format_event_message(event: dict) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç.
    :param event: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏.
    :return: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
    """
    time_until = time_until_event(event['date'], event['time'])
    limit_text = "‚àû (–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π)" if event["participant_limit"] is None else str(event["participant_limit"])

    message_text = (
        f"üì¢ <b>{event['description']}</b>\n"
        f"üìÖ <i>–î–∞—Ç–∞: </i> {event['date']}\n"
        f"üïí <i>–í—Ä–µ–º—è: </i> {event['time']}\n"
        f"‚è≥ <i>–î–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: </i> {time_until}\n"
        f"üë• <i>–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: </i> {limit_text}\n\n"
        f"‚úÖ <i>–£—á–∞—Å—Ç–Ω–∏–∫–∏: </i>\n{event.get('participants', '–ï—â—ë –Ω–∏–∫—Ç–æ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç.')}\n\n"
        f"‚è≥ <i>–†–µ–∑–µ—Ä–≤: </i>\n{event.get('reserve', '–†–µ–∑–µ—Ä–≤ –ø—É—Å—Ç.')}\n\n"
        f"‚ùå <i>–û—Ç–∫–∞–∑–∞–≤—à–∏–µ—Å—è: </i>\n{event.get('declined', '–û—Ç–∫–∞–∑–∞–≤—à–∏—Ö—Å—è –Ω–µ—Ç.')}"
    )

    return message_text


def validate_date(date_str: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –¥–∞—Ç–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–¥.–º–º.–≥–≥–≥–≥".
    :param date_str: –°—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π.
    :return: True, –µ—Å–ª–∏ –¥–∞—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, –∏–Ω–∞—á–µ False.
    """
    try:
        datetime.strptime(date_str, "%d.%m.%Y")
        return True
    except ValueError:
        return False


def validate_time(time_str: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ "—á—á:–º–º".
    :param time_str: –°—Ç—Ä–æ–∫–∞ —Å –≤—Ä–µ–º–µ–Ω–µ–º.
    :return: True, –µ—Å–ª–∏ –≤—Ä–µ–º—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –∏–Ω–∞—á–µ False.
    """
    try:
        datetime.strptime(time_str, "%H:%M")
        return True
    except ValueError:
        return False